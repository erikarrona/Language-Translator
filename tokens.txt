CLASS	$CLASS
LargestCommonDenominator	<var>
{	$LB
CONST	$CONST
M	<var>
=	<assign>
7	<integer>
,	<comma>
N	<var>
=	<assign>
85	<integer>
;	<semi>
VAR	$VAR
X	<var>
,	<comma>
Y	<var>
,	<comma>
Z	<var>
,	<comma>
Q	<var>
,	<comma>
R	<var>
;	<semi>
PROCEDURE	$PROCEDURE
Multiply()	<var>
{	$LB
VAR	$VAR
A	<var>
,	<comma>
B	<var>
;	<semi>
A	<var>
=	<assign>
X	<var>
;	<semi>
B	<var>
=	<assign>
Y	<var>
;	<semi>
Z	<var>
=	<assign>
0	<integer>
;	<semi>
WHILE	$WHILE
B	<var>
>	<relop>
0	<integer>
DO	$DO
{	$LB
IF	$IF
ODD	$ODD
B	<var>
THEN	<var>
Z	<var>
=	<assign>
Z	<var>
+	<addop>
A	<var>
;	<semi>
A	<var>
=	<assign>
2	<integer>
*	<mop>
A	<var>
;	<semi>
B	<var>
=	<assign>
B	<var>
/	<mop>
2	<integer>
}	$RB
}	$RB
PROCEDURE	$PROCEDURE
Divide()	<var>
{	$LB
VAR	$VAR
W	<var>
;	<semi>
R	<var>
=	<assign>
X	<var>
;	<semi>
Q	<var>
=	<assign>
0	<integer>
;	<semi>
W	<var>
=	<assign>
Y	<var>
;	<semi>
WHILE	$WHILE
W	<var>
<=	<relop>
R	<var>
DO	$DO
W	<var>
=	<assign>
2	<integer>
*	<mop>
W	<var>
;	<semi>
WHILE	$WHILE
W	<var>
>	<relop>
Y	<var>
DO	$DO
{	$LB
Q	<var>
=	<assign>
2	<integer>
*	<mop>
Q	<var>
;	<semi>
W	<var>
=	<assign>
W	<var>
/	<mop>
2	<integer>
;	<semi>
IF	$IF
W	<var>
<=	<relop>
R	<var>
THEN	<var>
{	$LB
R	<var>
=	<assign>
R	<var>
-	<addop>
W	<var>
;	<semi>
Q	<var>
=	<assign>
Q	<var>
+	<addop>
1	<integer>
}	$RB
}	$RB
}	$RB
PROCEDURE	$PROCEDURE
GCD()	<var>
{	$LB
VAR	$VAR
F	<var>
,	<comma>
G	<var>
;	<semi>
F	<var>
=	<assign>
X	<var>
;	<semi>
G	<var>
=	<assign>
Y	<var>
;	<semi>
WHILE	$WHILE
F	<var>
!=	<relop>
G	<var>
DO	$DO
{	$LB
IF	$IF
F	<var>
<	<relop>
G	<var>
THEN	<var>
G	<var>
=	<assign>
G	<var>
-	<addop>
F	<var>
;	<semi>
IF	$IF
G	<var>
<	<relop>
F	<var>
THEN	<var>
F	<var>
=	<assign>
F	<var>
-	<addop>
G	<var>
;	<semi>
}	$RB
Z	<var>
=	<assign>
F	<var>
}	$RB
X	<var>
=	<assign>
M	<var>
;	<semi>
Y	<var>
=	<assign>
N	<var>
CALL	$CALL
Multiply()	<var>
;	<semi>
X	<var>
=	<assign>
25	<integer>
;	<semi>
Y	<var>
=	<assign>
3	<integer>
;	<semi>
CALL	$CALL
Divide()	<var>
;	<semi>
X	<var>
=	<assign>
84	<integer>
;	<semi>
Y	<var>
=	<assign>
36	<integer>
;	<semi>
CALL	$CALL
GCD()	<var>
}	$RB
